@startuml

skinparam classAttributeIconSize 0

namespace メール #FFFFFF {
  class メールフォーム {
    - ユーザー情報 : ユーザー情報
    - メール情報リスト : List<メール情報>
    + コンストラクタ(ユーザー情報 : ユーザー情報)
    - 受信ボックスボタンクリックイベント() : void
    - 送信ボックスボタンクリックイベント() : void
    - 新規作成ボタンクリックイベント() : void
    - 返信ボタンクリックイベント() : void
    - 終了ボックスボタンクリックイベント() : void
    - 表クリックイベント() : void
    - メール表示(ユーザーID : string, 送受信 : 送受信) : void
    - メール一覧表示() : void
  }

  class 新規作成フォーム {
    - ユーザー情報 : ユーザー情報
    - メール情報リスト : List<メール情報>
    + コンストラクタ(ユーザー情報 : ユーザー情報, メール情報 : メール情報)
    - 宛先ボタンクリックイベント() : void
    - 送信ボタンクリックイベント() : void
    - メール情報リスト作成() : List<メール情報>
  }
  
  class 宛先フォーム {
    - メール情報リスト : List<メール情報>
    + コンストラクタ(メール情報リスト : List<メール情報>)
    - OKボタンクリックイベント() : void
  }

  class メールロジック {
    + アドレス情報取得() : List<メール情報>
    + アドレス名生成(メール情報 : メール情報) : string
    + メール取得(ユーザーID : string, 送受信 : 送受信) : List<メール情報>
    + メール送信(ユーザーID : string, メール情報 : メール情報) : void
  }
  
  class メールDBアクセス {
    + アドレス情報取得() : List<メール情報>
    + メール受信取得(ユーザーID : string) : List<メール情報>
    + メール送信取得(ユーザーID : string) : List<メール情報>
    + メール送信保存(ユーザーID : string, メール情報 : メール情報) : void
  }

  enum 送受信 {
    送信者 = 0
    受信者 = 1
  }

  class メール情報 {
     + 他ユーザーID : String
     + 他ユーザー名 : String
     + 件名 : String
     + メッセージ : String
     + 追加日時 : DateTime
  }
}

@enduml