@startuml
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60
skinparam sequenceParticipant underline

actor "ユーザー" as user
participant "ログインフォーム" as login_form
participant "メニューフォーム" as menu_form
participant "ログインロジック" as login_logic
participant "ログインDBアクセス" as login_data_acces
participant "共通ロジック" as common_logic
participant "共通DBアクセス" as common_db
database "データベース" as db

user -> login_form: 起動＆インスタンス生成
login_form -> login_form: コンストラクタ
activate login_form
login_form -> login_form:ユーザーIDの最大文字数を二十文字に設定
login_form -> login_form:パスワードの最大文字数を二十文字に設定

login_form --> user:
deactivate login_form
user -> login_form: ログイン情報の入力
user -> login_form: ログインボタン押下
login_form -> login_form: ボタンクリックイベント
activate login_form

login_form -> login_form: 未入力チェック
activate login_form
opt 未入力の項目があるとき
    login_form -> login_form: エラーメッセージ出力
    login_form -> login_form: 未入力項目を赤色に設定
    login_form --> login_form:falseを返す
end
login_form --> login_form:trueを返す
deactivate login_form
opt 未入力チェックの結果がfalse
    login_form --> user:戻り値無し
end
login_form -> login_logic: インスタンス生成
login_form -> login_logic: ユーザーチェック
activate login_logic
login_logic -> login_data_acces: インスタンス生成
login_logic -> login_data_acces: ユーザー情報取得
activate login_data_acces

login_data_acces -> db: ユーザー情報取得SQL
db --> login_data_acces: ユーザー情報データ
login_data_acces --> login_logic: ユーザー情報を返す
deactivate login_data_acces
login_logic -> login_logic: プロパティのユーザー情報に取得したユーザー情報を設定
opt ユーザー情報がNULLの時
    login_logic --> login_form: falseを返す
end
login_logic -> login_logic: パスワードチェック
activate login_logic
alt パスワードが一致
    login_logic -> login_logic: 引数にユーザー状態をログインで設定
    login_logic -> common_logic: ユーザー状態設定
    activate common_logic
    common_logic -> common_db: ログインフラグ更新
    activate common_db
    common_db -> db: ログインフラグ更新SQL
    db --> common_db: 
    common_db --> common_logic: 
    deactivate common_db
    common_logic --> login_logic: 
    deactivate common_logic
    login_logic --> login_logic: trueを返す
else パスワードが不一致
    login_logic --> login_logic: falseを返す
end
deactivate login_logic
login_logic --> login_form: パスワードチェックの結果を返す
deactivate login_logic
deactivate login_logic
alt ユーザーチェックの結果がtrueの時
    login_form -> login_logic: プロパティのユーザー情報を引数に設定
    login_logic --> login_form: 
    login_form -> menu_form: メニューフォームのインスタンスの生成
    menu_form -> menu_form: コンストラクタ
    activate menu_form
    menu_form -> menu_form: メニューフォームにユーザー情報から権限名を設定
    menu_form -> menu_form: メニューフォームにユーザー情報からユーザー名を設定
    alt 権限IDが一般の時
    menu_form -> menu_form: 画面を一般メニューに設定する
    else 権限IDが管理者の時
    menu_form -> menu_form: 画面を管理者メニューに設定する    
    end
    activate menu_form
    menu_form --> menu_form: 
    deactivate menu_form
    menu_form --> login_form: 
    deactivate menu_form
    login_form -> menu_form: メニューフォームを起動
    menu_form --> user: メニュー画面
    login_form -> login_form: ログイン画面を閉じる
else ユーザーチェックの結果がfalseの時
    login_form -> login_form: ユーザーIDとパスワードををクリア
    login_form --> user: ログイン画面
end
deactivate login_form

@enduml